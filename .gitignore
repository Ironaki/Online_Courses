LeetCode/

Berkeley_CS61B_Data_Structures/Chap6_Dynamic Programming_Berkeley.pdf
Berkeley_CS61B_Data_Structures/Discussion/
Berkeley_CS61B_Data_Structures/Note.txt
Berkeley_CS61B_Data_Structures/Other_Code/
Berkeley_CS61B_Data_Structures/Slides/
Berkeley_CS61B_Data_Structures/data-structures.pdf


Princeton_Algorithms/HW/W2-Queues/queues.zip
Princeton_Algorithms/HW/W3-Collinear Points/Collinear_100:100.zip
Princeton_Algorithms/HW/W3-Collinear Points/collinear_92:100.zip
Princeton_Algorithms/HW/W3-Collinear Points/collinear_98:100.zip
Princeton_Algorithms/HW/W4-8 Puzzle/8puzzle 70:100.zip
Princeton_Algorithms/HW/W4-8 Puzzle/8puzzle.zip
Princeton_Algorithms/HW/W5-kd Tree/kdtree-testing.zip
Princeton_Algorithms/HW/W5-kd Tree/kdtree100.zip
Princeton_Algorithms/HW/W5-kd Tree/kdtree67.zip
Princeton_Algorithms/HW/W5-kd Tree/kdtree85.zip
Princeton_Algorithms/HW/W5-kd Tree/kdtree98.zip
Princeton_Algorithms/HW/W5-kd Tree/note.txt
Princeton_Algorithms/Screen Shot 2017-06-13 at 16.16.12 PM.png
Princeton_Algorithms/Slides/
Princeton_Algorithms/UF.java


UW_Programming_Languages/Certificate.pdf
UW_Programming_Languages/Codes/Part_B/All Code/
UW_Programming_Languages/Codes/Part_B/Reading Notes/
UW_Programming_Languages/Codes/Part_B/Slides/
UW_Programming_Languages/Codes/Part_C/Reading_Notes/
UW_Programming_Languages/Codes/Part_C/Slides/
UW_Programming_Languages/Codes/Part_C/Video_Code/
UW_Programming_Languages/Slides/
UW_Programming_Languages/emacs ref.pdf

#################### Java ####################
# Compiled class file
*.class

# Log file
*.log

# BlueJ files
*.ctxt

# Mobile Tools for Java (J2ME)
.mtj.tmp/

# Package Files #
*.jar
*.war
*.nar
*.ear
*.zip
*.tar.gz
*.rar

# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
hs_err_pid*


#################### MacOS ####################
# General
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon


# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

#################### Python ####################
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# celery beat schedule file
celerybeat-schedule

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/
